/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-04-11 08:43:51 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.portfolio;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class portfolio_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Portfolio</title>\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../division.css\">\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("	div.all {\r\n");
      out.write("		width: 100%;\r\n");
      out.write("	}\r\n");
      out.write("	div.left {	\r\n");
      out.write("		width: 20%;\r\n");
      out.write("		float: left;\r\n");
      out.write("	}\r\n");
      out.write("	div.right {\r\n");
      out.write("		width: 80%;\r\n");
      out.write("		float: right;\r\n");
      out.write("	}\r\n");
      out.write("	div.content {\r\n");
      out.write("		margin: 0 auto;\r\n");
      out.write("		text-align: center;\r\n");
      out.write("	}\r\n");
      out.write("	div.pfs{\r\n");
      out.write("	height: 400px;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	div.panel{\r\n");
      out.write("	margin: 30px;\r\n");
      out.write("	padding:20px;\r\n");
      out.write("	justify-content: center; \r\n");
      out.write("	align-items: center;\r\n");
      out.write("	background-color: white;\r\n");
      out.write("	filter:progid:DXImageTransform.Microsoft.gradient(startColorstr='#ffffffff',endColorstr='#ffeaeef2',GradientType=0);\r\n");
      out.write("	-webkit-box-shadow:0px 0px 20px 1px rgba(0,0,0,0.05),inset 0px 0px 2px 1px #fff;\r\n");
      out.write("	box-shadow:0px 0px 20px 1px rgba(0,0,0,0.08),inset 0px 0px 2px 1px #fff;\r\n");
      out.write("	}\r\n");
      out.write("	/* 추가 버튼 */\r\n");
      out.write("	button.add{\r\n");
      out.write("		margin-top: 10px;\r\n");
      out.write("/* 		display:inline-block; */\r\n");
      out.write("		align-content :flex-end;\r\n");
      out.write("		width: 60px;\r\n");
      out.write("		background-color: #434343;\r\n");
      out.write("		color: white;\r\n");
      out.write("		padding: 5px 5px;\r\n");
      out.write("		border: none;\r\n");
      out.write("		cursor: pointer;\r\n");
      out.write("		margin-left: 10px;\r\n");
      out.write("		margin-right: 10px;\r\n");
      out.write(" 		display: block; \r\n");
      out.write("		margin: 8px auto;\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"all\">\r\n");
      out.write("		<div class = \"left\">\r\n");
      out.write("			<header ></header>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		<div class = \"right\" id=\"right\" >\r\n");
      out.write("			<div class=\"content\" id=\"content\" >\r\n");
      out.write("				<h1 style=\"margin: 50px ;  \">포트폴리오</h1>\r\n");
      out.write("			</div>\r\n");
      out.write("			<div id=\"pfs\" class=\"pfs\"><button class=\"add\" id=\"add\" onclick=\"location='add.jsp'\" style=\"align-content: center;\" >추가</button></div>\r\n");
      out.write("<!-- 			<button class=\"add\" id=\"add\" >추가</button>  -->\r\n");
      out.write("			\r\n");
      out.write("<!-- 				<button class=\"add\" id=\"add\" onclick=\"newpf()\">추가</button>  -->\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("	<script src=\"/header.js\">\r\n");
      out.write("	</script>\r\n");
      out.write("	\r\n");
      out.write("	<script>\r\n");
      out.write("// 	location.href =\"/portfolio/add.jsp\";\r\n");
      out.write("\r\n");
      out.write("			let xhr4 = new XMLHttpRequest();\r\n");
      out.write("			\r\n");
      out.write("			xhr4.open(\"POST\",\"/portfolio/loadDB.jsp\",true);//tableNum 이 cnum임\r\n");
      out.write("			xhr4.send();\r\n");
      out.write("			xhr4.onreadystatechange = function(){\r\n");
      out.write("				if (xhr4.readyState == 4)  {\r\n");
      out.write("					var DB = xhr4.responseText.trim();\r\n");
      out.write("				    const status = xhr4.status;\r\n");
      out.write("				    if(status === 0 || (status >= 200 && status < 400)) {\r\n");
      out.write("				      console.log('success portfolio loadDB...');\r\n");
      out.write("				      var DB = xhr4.responseText.trim();\r\n");
      out.write("				      // /기준으로 각각 다른 포트폴리오\r\n");
      out.write("				      // & 기준으로 포트폴리오별 요소\r\n");
      out.write("				      console.log(\"==================DB :\"+DB+\"============\");\r\n");
      out.write("				      tbDB = DB.split('/--/');\r\n");
      out.write("				      console.log(\"==================tbDB :\"+tbDB+\"============\");\r\n");
      out.write("// 				      sessionStorage.setItem(\"DBlen\",DBlen);\r\n");
      out.write("				      \r\n");
      out.write("					  makeDBtable(tbDB); //테이블 코드 생성\r\n");
      out.write("				    } else {\r\n");
      out.write("				      console.log('fail portfolio loadDB...');\r\n");
      out.write("				    }\r\n");
      out.write("				  }\r\n");
      out.write("			}\r\n");
      out.write("			var DBtableCode = [];\r\n");
      out.write("			function makeDBtable(tbDB) {\r\n");
      out.write("				var n=0;\r\n");
      out.write("				for (var i=1 ; i<tbDB.length; i++){\r\n");
      out.write("					if(i%3==1){\r\n");
      out.write("						var div_ = `<div id=\"pfs`+i+`\" class=\"pfs`+i+`\" style=\"width:100%; height:370px;display: flex;\"></div>`;\r\n");
      out.write("						$(\"#pfs\").append(div_);\r\n");
      out.write("						n=i;\r\n");
      out.write("						\r\n");
      out.write("					}\r\n");
      out.write("					//tbDB[1] = tb_1&수정제목11&수정내용11\r\n");
      out.write("					//	 				console.log(\"==================tbDB :\"+tbDB[i]+\"============\");\r\n");
      out.write("					var strs =tbDB[i].split('&--&');//테이블번호 , 타이틀 , 대표이미지주소 - 104,Portfolio Title,/portfolio/imgs/ex.png\r\n");
      out.write("					console.log(\"==================strs :\"+strs[0]+\"============\");\r\n");
      out.write("					DBtableCode[i] =  `<div id=\"pnum`+strs[1]+`\" class = \"panel\"  onclick=\"gopf(pnum`+strs[1]+`.id)\" style=\"width: 300px;\" align=\"center\">\r\n");
      out.write("					<div style=\"height: 70%; width: 100%;display: flex;justify-content: center; align-items: center;\" align=\"center\">\r\n");
      out.write("						<img src=\"`+strs[3]+`\" alt=\"My Image\" style=\"width: 100%; height: 100%;\">\r\n");
      out.write("					</div>	\r\n");
      out.write("					\r\n");
      out.write("						<h2 style=\"height: 30%;align-items: center;display: inline-flex ;\">`+strs[2]+`</h2>\r\n");
      out.write("					</div>`;//이거 코드 수정해야함\r\n");
      out.write("					$(\"#pfs\"+n).append(DBtableCode[i]);\r\n");
      out.write("					\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("			\r\n");
      out.write("	function gopf(pnums) {\r\n");
      out.write("// 		console.log(\"==================pnum :\"+pnums.substr(4,pnums.length) +\"============\");\r\n");
      out.write("//		pnums.substr(4,pnums.length) - pnum\r\n");
      out.write("		var  pnum = pnums.substr(4,pnums.length);\r\n");
      out.write("		alert(pnum);\r\n");
      out.write("		location.href=\"/portfolio/loadDBPF.jsp?pnum=\" + pnum;\r\n");
      out.write("	}\r\n");
      out.write("			\r\n");
      out.write("			\r\n");
      out.write("	function newpf() {\r\n");
      out.write("		const pfs = document.getElementById('pfs');\r\n");
      out.write("		\r\n");
      out.write("		fetch('/portfolio/objs.jsp')\r\n");
      out.write("		.then(res => res.text())\r\n");
      out.write("		.then(data => pfs.innerHTML = data);\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
