/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-04-11 07:37:31 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.portfolio;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import com.phoenix.portfolio.PortfolioDTO;

public final class add_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("com.phoenix.portfolio.PortfolioDTO");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Portfolio</title>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js\"></script>\r\n");
      out.write("<style>\r\n");
      out.write("	table{\r\n");
      out.write("		margin:0 auto;\r\n");
      out.write("		width: 80%;\r\n");
      out.write("	}\r\n");
      out.write("	div.all {\r\n");
      out.write("		width: 100%;\r\n");
      out.write("	}\r\n");
      out.write("	div.left {	\r\n");
      out.write("		width: 20%;\r\n");
      out.write("		float: left;\r\n");
      out.write("	}\r\n");
      out.write("	div.right {\r\n");
      out.write("		width: 80%;\r\n");
      out.write("		float: right;\r\n");
      out.write("	}\r\n");
      out.write("	#title{\r\n");
      out.write("		height: 50px;\r\n");
      out.write("	}\r\n");
      out.write("	#pcontents{\r\n");
      out.write("		width:	98%;\r\n");
      out.write("		height:	300px;\r\n");
      out.write("		resize: none;\r\n");
      out.write("	}\r\n");
      out.write("	#purl{\r\n");
      out.write("		height: 40px;\r\n");
      out.write("	}\r\n");
      out.write("	/* 파일 */\r\n");
      out.write("	.filebox .upload-name {\r\n");
      out.write("	    display: inline-block;\r\n");
      out.write("	    height: 40px;\r\n");
      out.write("	    padding: 0 10px;\r\n");
      out.write("	    vertical-align: middle;\r\n");
      out.write("	    border: 1px solid #dddddd;\r\n");
      out.write("	    width: 90%;\r\n");
      out.write("	    color: #999999;\r\n");
      out.write("	}\r\n");
      out.write("	.filebox label {\r\n");
      out.write("		margin-top: 10px;\r\n");
      out.write("		display:inline-block;\r\n");
      out.write("		width: 60px;\r\n");
      out.write("		background-color: #434343;\r\n");
      out.write("		color: white;\r\n");
      out.write("		padding: 5px 5px;\r\n");
      out.write("		border: none;\r\n");
      out.write("		cursor: pointer;\r\n");
      out.write("		margin-left: 10px;\r\n");
      out.write("		margin-right: 10px;\r\n");
      out.write("		margin: 8px auto;\r\n");
      out.write("	}\r\n");
      out.write("	.filebox input[type=\"file\"] {\r\n");
      out.write("	    position: absolute;\r\n");
      out.write("	    width: 0;\r\n");
      out.write("	    height: 0;\r\n");
      out.write("	    padding: 0;\r\n");
      out.write("	    overflow: hidden;\r\n");
      out.write("	    border: 0;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* 저장 버튼 */\r\n");
      out.write("	button.save{\r\n");
      out.write("		margin-top: 10px;\r\n");
      out.write("		display:inline-block;\r\n");
      out.write("		width: 60px;\r\n");
      out.write("		background-color: #434343;\r\n");
      out.write("		color: white;\r\n");
      out.write("		padding: 5px 5px;\r\n");
      out.write("		border: none;\r\n");
      out.write("		cursor: pointer;\r\n");
      out.write("		margin-left: 10px;\r\n");
      out.write("		margin-right: 10px;\r\n");
      out.write("		display: block;\r\n");
      out.write("		margin: 8px auto;\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	/* 텍스트 */\r\n");
      out.write("	input[type=text] ,textarea{\r\n");
      out.write("		background-color:#00ff0000;\r\n");
      out.write("		width: 98%;\r\n");
      out.write("		border: none;\r\n");
      out.write("		font-size: 15px;\r\n");
      out.write("		outline:none;\r\n");
      out.write("	}\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class=\"all\">\r\n");
      out.write("		<div class = \"left\">\r\n");
      out.write("			<header ></header>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		<div class = \"right\" >\r\n");
      out.write("			<div>\r\n");
      out.write("				<form method=\"post\" name=\"boardForm\" action=\"/portfolio/portfolio.pf\">\r\n");
      out.write("					<table style=\"width: 900px; border: 0px;\">\r\n");
      out.write("						<tr align=\"center\" valign=\"middle\">\r\n");
      out.write("							<td><h1>포트폴리오</h1></td>\r\n");
      out.write("						</tr>\r\n");
      out.write("					</table>\r\n");
      out.write("					<table border=\"1\" style=\"border-collapse:collapse;background-color:white;\">\r\n");
      out.write("						<!-- 제목 -->\r\n");
      out.write("						<tr height=\"50px\">\r\n");
      out.write("							<td>\r\n");
      out.write("								<input type=\"text\" id=\"ptitle\" class = \"ptitle\" placeholder=\"  제목을 입력하세요\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${portfolios.ptitle}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("							</td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						<!-- 내용 -->\r\n");
      out.write("						<tr height=\"300px\">\r\n");
      out.write("							<td>\r\n");
      out.write("								<textarea id=\"pcontents\" placeholder=\"  내용을 입력하세요\">");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${portfolios.pcontents}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("</textarea>					\r\n");
      out.write("							</td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						<!-- 링크 -->\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td class=\"form-group\" >\r\n");
      out.write("								<input type=\"text\" id=\"purl\" class=\"purl\" placeholder=\"  URL 추가해주세요\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${portfolios.purl}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\">\r\n");
      out.write("							</td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						<!-- 이미지 -->\r\n");
      out.write("						<tr>\r\n");
      out.write("							<td>\r\n");
      out.write("								<div id=\"image_container\" ></div>\r\n");
      out.write("								<div class=\"filebox\" style=\"display: flex; padding-right : 5px;\">\r\n");
      out.write("								    <input class=\"upload-name\" placeholder=\"파일을 첨부해주세요\" style=\"border: none;\">\r\n");
      out.write("								    <label for=\"file\" style=\"padding-left: 14px;\">파일찾기</label> \r\n");
      out.write("<!-- 								    https://m.blog.naver.com/whatacodingday/221844492754\r\n");
      out.write("										- 파일가져오기참고링크..?\r\n");
      out.write(" -->\r\n");
      out.write("								    <input type=\"file\" id=\"file\" class=\"file\" onchange=\"setThumbnail(event);\" accept=\"image/*\" > \r\n");
      out.write("								</div>\r\n");
      out.write("							</td>\r\n");
      out.write("						</tr>\r\n");
      out.write("					</table>\r\n");
      out.write("					<!-- 저장 -->\r\n");
      out.write("					<button class=\"save\" id=\"save\" type=\"button\" onclick=\"savedb()\">저장</button>\r\n");
      out.write("				</form>\r\n");
      out.write("			</div>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("	<script src=\"../header.js\"></script>\r\n");
      out.write("	<!-- 이미지 미리보기, 파일명 출력 -->\r\n");
      out.write("	<script src=\"./file_path.js\"></script>\r\n");
      out.write("	\r\n");
      out.write("	\r\n");
      out.write("	<script >\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("	function savedb(){	//num은 테이블 번호 즉 몇번째 테이블인지 - 0부터 시작\r\n");
      out.write("		var ptitle = document.getElementById('ptitle');\r\n");
      out.write("		var pcontents = document.getElementById('pcontents');\r\n");
      out.write("		var purl = document.getElementById('pcontents');\r\n");
      out.write("		var ppath = document.getElementById('ppath');\r\n");
      out.write("		\r\n");
      out.write("		let xhrs = new XMLHttpRequest();\r\n");
      out.write("		\r\n");
      out.write("		xhrs.open(\"POST\",\"/portfolio/saveDB.jsp?ptitle=\"+ptitle.value+\"&pcontents=\"+pcontents.value+\"&purl=\"+purl.value+\"&pnum=\"+pnum+\"&ppath=\"+ppath,true);\r\n");
      out.write("		xhrs.send();\r\n");
      out.write("		xhrs.onreadystatechange = function(){\r\n");
      out.write("			if(xhrs.readyState == 4){\r\n");
      out.write("				if(xhrs.responseText.trim() == \"ok\"){\r\n");
      out.write("					alert(\"저장되었습니다.\");\r\n");
      out.write("				}else{\r\n");
      out.write("					alert(\"저장 실패했습니다.\");\r\n");
      out.write("				}\r\n");
      out.write("				\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("	}\r\n");
      out.write("	\r\n");
      out.write("	</script>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
