/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.73
 * Generated at: 2023-04-11 07:29:32 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.cover_005fletter;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class cover_005fletter_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Cover Letter</title>\r\n");
      out.write("<script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.6.3/jquery.min.js\"></script>\r\n");
      out.write("<style >\r\n");
      out.write("\r\n");
      out.write("/*선택시 박스표시 없앰*/\r\n");
      out.write("*:focus {\r\n");
      out.write("    outline: 0;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("div {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("}\r\n");
      out.write("div.left {	\r\n");
      out.write("	width: 20%;\r\n");
      out.write("	float: left;\r\n");
      out.write("}\r\n");
      out.write("div.right {\r\n");
      out.write("	width: 80%;\r\n");
      out.write("	float: right;\r\n");
      out.write("	height: 670px;\r\n");
      out.write("	display: block;\r\n");
      out.write("	justify-content: center;\r\n");
      out.write("	align-content: center;\r\n");
      out.write("	\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("/* 	display: flex; */\r\n");
      out.write("/* 	justify-content: center; */\r\n");
      out.write("/* 	align-items: center; */\r\n");
      out.write("\r\n");
      out.write("button.add , button.save{\r\n");
      out.write("	margin-top: 10px;\r\n");
      out.write("	display:inline-block;\r\n");
      out.write("	width: 60px;\r\n");
      out.write("	background-color: #434343;\r\n");
      out.write("	color: white;\r\n");
      out.write("	padding: 5px 5px;\r\n");
      out.write("	margin: 8px 0;\r\n");
      out.write("	border: none;\r\n");
      out.write("	cursor: pointer;\r\n");
      out.write("	margin-left: 10px;\r\n");
      out.write("	margin-right: 10px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("table, tr, th, td { border:1px solid #43434350; border-collapse:collapse; }\r\n");
      out.write("table {\r\n");
      out.write("	width: 80%;\r\n");
      out.write("	height: 300px;\r\n");
      out.write("	background-color: #ffffff;\r\n");
      out.write("	margin: auto;\r\n");
      out.write("	margin-top: 30px;\r\n");
      out.write("};\r\n");
      out.write("\r\n");
      out.write("tr.row1{\r\n");
      out.write("	height: 10%;\r\n");
      out.write("}\r\n");
      out.write("tr.row2{\r\n");
      out.write("	height: 90%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("td.col1{\r\n");
      out.write("	width: 95%;\r\n");
      out.write("}\r\n");
      out.write("td.col2{\r\n");
      out.write("	width: 5%;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("button.X {\r\n");
      out.write("	width: 100%;\r\n");
      out.write("	height: 100%;\r\n");
      out.write("	background-color:#00ff0000;\r\n");
      out.write("	border: none;\r\n");
      out.write("	font-size: 30px;\r\n");
      out.write("	color: #43434360;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("input[type=text] ,textarea{\r\n");
      out.write("	background-color:#00ff0000;\r\n");
      out.write("	width: 98%;\r\n");
      out.write("	height: 98%;\r\n");
      out.write("	border: none;\r\n");
      out.write("	font-size: 15px;\r\n");
      out.write("	padding: 10px;	\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</style>\r\n");
      out.write("\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("	<div class = \"all\">\r\n");
      out.write("		<div class = \"left\">\r\n");
      out.write("			<header ></header>\r\n");
      out.write("		</div>\r\n");
      out.write("		\r\n");
      out.write("		<div class = \"right\" id=\"right\" align=\"center\">\r\n");
      out.write("			<div class=\"content\" id=\"content\">\r\n");
      out.write("			<h1 style=\"font-family: 'Gowun Batang';\">자기소개서</h1>\r\n");
      out.write("<!--  \r\n");
      out.write("					<table border=\"1\" id=\"\" class=\"\" >\r\n");
      out.write("						<tr class=\"row1\">\r\n");
      out.write("							<td class=\"col1\">\r\n");
      out.write("								<input type=\"text\" class=\"ctitle\" id=\"ctitle\" name=\"ctitle\" placeholder=\"항목 입력\" >\r\n");
      out.write("							</td>\r\n");
      out.write("							<td class=\"col2\"> <button class=\"X\" >×</button> </td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						<tr class=\"row2\">\r\n");
      out.write("							<td colspan=\"2\">\r\n");
      out.write("								<textarea maxlength=\"500\" placeholder=\"자기소개 입력\" style=\"resize: none;\" id=\"ccontents\" class=\"ccontents\" name=\"ccontents\"></textarea>\r\n");
      out.write("							</td>\r\n");
      out.write("						</tr>\r\n");
      out.write("					</table>\r\n");
      out.write("					<button type=\"submit\" class=\"save\" id=\"save\" onclick=\"save()\">저장</button>\r\n");
      out.write("					-->\r\n");
      out.write("			</div>\r\n");
      out.write("			\r\n");
      out.write("			<button class=\"add\" id=\"add\" >추가</button>\r\n");
      out.write("		</div>\r\n");
      out.write("	</div>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("		");

// 		int tableNum = 0;
// 		session.setAttribute("tableNum", tableNum);
// 		// 	tb_0~tb_19 총 20개의 테이블 아이디
// 		String[] tb_ids = new String[20];
// 		for(int i=0;i<tb_ids.length;i++){
// 			tb_ids[i]="tb_"+Integer.toString(i);
// 		}
		
      out.write("\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("	<script src=\"/header.js\"></script>\r\n");
      out.write("\r\n");
      out.write("	<script >\r\n");
      out.write("	/////////////////////////////////////자소서 불러오는 부분//////////////////////////\r\n");
      out.write("	// 데이터 불러와서 백틱배열만들어서 코드 저장하기\r\n");
      out.write("	// 화면 랜더링 끝나고 나서 넣어야 잘들어갈거같아서...\r\n");
      out.write("	\r\n");
      out.write("	//문제 생겻다 - 수정이나 저장시 유저 아이디마다 테이블 아이디 0부터 적용\r\n");
      out.write("	//일단 logout.jsp에 로그아웃시 tableNum 세션에서 삭제하는거 했음\r\n");
      out.write("	// db.jsp 하나더 만들어서 로그인하듯이 디비 만지고 하는게 나을듯\r\n");
      out.write("	\r\n");
      out.write("		//ajax통신\r\n");
      out.write("		var DBlen ;\r\n");
      out.write("		var DBtableCode = [];\r\n");
      out.write("		var tbDB = [];\r\n");
      out.write("		let xhr1 = new XMLHttpRequest();\r\n");
      out.write("		\r\n");
      out.write("		xhr1.open(\"POST\",\"load.jsp\",true);\r\n");
      out.write("		xhr1.send();\r\n");
      out.write("		xhr1.onreadystatechange = function(){\r\n");
      out.write("			if (xhr1.readyState == 4)  {\r\n");
      out.write("			    const status = xhr1.status;\r\n");
      out.write("			    if(status === 0 || (status >= 200 && status < 400)) {\r\n");
      out.write("			      console.log('success...');\r\n");
      out.write("			      var DB = xhr1.responseText.trim();\r\n");
      out.write("			      tbDB = DB.split('/');\r\n");
      out.write("			      DBlen = tbDB[0];\r\n");
      out.write("			      sessionStorage.setItem(\"DBlen\",DBlen);\r\n");
      out.write("				  makeDBtable(DBlen,tbDB); //테이블 코드 생성\r\n");
      out.write("			    } else {\r\n");
      out.write("			      console.log('fail...');\r\n");
      out.write("			    }\r\n");
      out.write("			  }\r\n");
      out.write("		}\r\n");
      out.write("function makeDBtable(len,tbDB) {\r\n");
      out.write("var recentid=0;\r\n");
      out.write("for (var i=0 ; i<len ; i++){\r\n");
      out.write("	var strs =tbDB[i+1].split('&');\r\n");
      out.write("	var ids = strs[0].split('_')[1]; //테이블 번호\r\n");
      out.write("	recentid = (recentid>parseInt(ids))?recentid : ids;\r\n");
      out.write("	sessionStorage.setItem(\"DBlen\",parseInt(recentid)+1); //마지막번호 다음번호를 넘겨주는것\r\n");
      out.write("	DBtableCode[i] =  `<table border=\"1\" id=\"`+ strs[0]+`\" class=\"`+ strs[0] +`\" >\r\n");
      out.write("						<tr class=\"row1\">\r\n");
      out.write("						<td class=\"col1\">\r\n");
      out.write("							<input type=\"text\" class=\"ctitle_`+ ids +`\" id=\"ctitle_`+ ids +`\" name=\"ctitle_`+ ids +`\" placeholder=\"항목을 입력해주세요\" value=\"`+strs[1]+`\">\r\n");
      out.write("						</td>\r\n");
      out.write("						<td class=\"col2\"> <button class=\"X\" onclick=\"del(`+ ids +`)\">×</button> </td>\r\n");
      out.write("					</tr>\r\n");
      out.write("					<tr class=\"row2\">\r\n");
      out.write("						<td colspan=\"2\">\r\n");
      out.write("							<textarea maxlength=\"500\" placeholder=\"자기소개를 입력해주세요\" style=\"resize: none;\" id=\"ccontents_`+ ids +`\" class=\"ccontents_`+ ids +`\" name=\"ccontents_`+ ids +`\">\r\n");
      out.write("							`+strs[2]+`</textarea>\r\n");
      out.write("						</td>\r\n");
      out.write("					</tr>\r\n");
      out.write("				</table>\r\n");
      out.write("				<button type=\"submit\" class=\"save\" id=\"save`+ ids +`\" onclick=\"save(`+ ids +`)\">저장</button>`;//이거 코드 수정해야함\r\n");
      out.write("					\r\n");
      out.write("	$(\"#content\").append(DBtableCode[i]);\r\n");
      out.write("	//디비에서 내용 가져와서 적용하기\r\n");
      out.write("}\r\n");
      out.write("}\r\n");
      out.write("	/////////////////////////////////////자소서 불러오는 부분끝//////////////////////////\r\n");
      out.write("	\r\n");
      out.write("		\r\n");
      out.write("		function setNum(setid) {\r\n");
      out.write("			sessionStorage.setItem(\"tableNum\",setid);\r\n");
      out.write("			alert(sessionStorage.getItem(\"tableNum\"));\r\n");
      out.write("			\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		sessionStorage.setItem(\"tableNum\",0);\r\n");
      out.write("		var tableNum = 0;\r\n");
      out.write("		\r\n");
      out.write("// 		자기소개서 불러올때는 아래와 다르게 클래스랑 아이디 부분에 디비에서 자겨온 고유 아이디로 넣기 - 디비고유아이디에 아래 tb_ids[String(tableNum)] 넣을예정\r\n");
      out.write("//	  	저장버튼도 자기소개서마다 넣는걸로 바꿀까\r\n");
      out.write("//		추가버튼 누를때마다 tableNum 증가되어 테이블 개수까지 알 수 있음\r\n");
      out.write("		\r\n");
      out.write("		$(\"#add\").click(function() {\r\n");
      out.write("			var DBlen2 = parseInt(sessionStorage.getItem(\"DBlen\"));\r\n");
      out.write("			tableNum = DBlen2;\r\n");
      out.write("			sessionStorage.setItem(\"DBlen\",DBlen2+1);\r\n");
      out.write("			var tbl = `<table border=\"1\" id=\"tb_`+ String(tableNum) +`\" class=\"tb_`+ String(tableNum) +`\" >\r\n");
      out.write("							<tr class=\"row1\">\r\n");
      out.write("							<td class=\"col1\">\r\n");
      out.write("								<input type=\"text\" class=\"ctitle_`+ String(tableNum) +`\" id=\"ctitle_`+ String(tableNum) +`\" name=\"ctitle_`+ String(tableNum) +`\" \r\n");
      out.write("								placeholder=\"항목을 입력해주세요\" \">\r\n");
      out.write("							</td>\r\n");
      out.write("							<td class=\"col2\"> <button class=\"X\" onclick=\"del(`+ String(tableNum) +`)\">×</button> </td>\r\n");
      out.write("						</tr>\r\n");
      out.write("						<tr class=\"row2\">\r\n");
      out.write("							<td colspan=\"2\">\r\n");
      out.write("								<textarea maxlength=\"500\" placeholder=\"자기소개를 입력해주세요\" style=\"resize: none;\" id=\"ccontents_`+ String(tableNum) +`\" \r\n");
      out.write("								class=\"ccontents_`+ String(tableNum) +`\" name=\"ccontents_`+ String(tableNum) +`\"></textarea>\r\n");
      out.write("							</td>\r\n");
      out.write("						</tr>\r\n");
      out.write("					</table>\r\n");
      out.write("					<button type=\"submit\" class=\"save\" id=\"save`+ String(tableNum) +`\" onclick=\"save(`+ String(tableNum) +`)\">저장</button>`;//이거 코드 수정해야함\r\n");
      out.write("			sessionStorage.setItem(\"tableNum\",tableNum+1);\r\n");
      out.write("			\r\n");
      out.write("			$(\"#content\").append(tbl);\r\n");
      out.write("	  	});\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("		//이미 있는 테이블에 저장할 경우 먼저 select로 디비에 있는 아이디 인지 확인해보고 있으면 내용 수정하는 sql쿼리 하기\r\n");
      out.write("		\r\n");
      out.write("		function save(num){	//num은 테이블 번호 즉 몇번째 테이블인지 - 0부터 시작\r\n");
      out.write("			var ctitlevalue = document.getElementById('ctitle_'+num).value;\r\n");
      out.write("			var ccontentsvalue = document.getElementById('ccontents_'+num).value;\r\n");
      out.write("// 			alert(ccontentsvalue);\r\n");
      out.write("			\r\n");
      out.write("			//ajax통신\r\n");
      out.write("			\r\n");
      out.write("			let xhr = new XMLHttpRequest();\r\n");
      out.write("			\r\n");
      out.write("			xhr.open(\"POST\",\"savedb.jsp?ctitle=\"+ctitlevalue+\"&ccontents=\"+ccontentsvalue+\"&tableNum=tb_\"+num,true);//tableNum 이 cnum임\r\n");
      out.write("			xhr.send();\r\n");
      out.write("			xhr.onreadystatechange = function(){\r\n");
      out.write("				if(xhr.readyState == 4){\r\n");
      out.write("					if(xhr.responseText.trim() == \"ok\"){\r\n");
      out.write("						alert(\"저장되었습니다.\");\r\n");
      out.write("					}else{\r\n");
      out.write("						alert(\"저장 실패했습니다.\");\r\n");
      out.write("					}\r\n");
      out.write("					\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		function del(cnum){	//num은 테이블 번호 즉 몇번째 테이블인지 - 0부터 시작\r\n");
      out.write("// 			alert(cnum);\r\n");
      out.write("// 			cnum = String(cnum);\r\n");
      out.write("			//ajax통신\r\n");
      out.write("			\r\n");
      out.write("			let xhr2 = new XMLHttpRequest();\r\n");
      out.write("			\r\n");
      out.write("			xhr2.open(\"get\",\"deldb.jsp?cnum=tb_\"+cnum,true);\r\n");
      out.write("			\r\n");
      out.write("			xhr2.send();\r\n");
      out.write("			\r\n");
      out.write("			xhr2.onreadystatechange = function(){\r\n");
      out.write("// 				console.log(\"==================POST ============\");\r\n");
      out.write("				if(xhr2.readyState == 4){\r\n");
      out.write("					if(xhr2.responseText.trim() == \"ok\"){\r\n");
      out.write("						$(\"#tb_\"+cnum).remove();\r\n");
      out.write("						$(\"#save\"+cnum).remove();\r\n");
      out.write("						alert(\"삭제되었습니다.\");\r\n");
      out.write("					}else if(xhr2.responseText.trim() == \"not-ok\"){\r\n");
      out.write("						alert(\"삭제 실패했습니다.\");\r\n");
      out.write("					}else if(xhr2.responseText.trim() == \"empty\"){\r\n");
      out.write("						sessionStorage.setItem(\"DBlen\",sessionStorage.getItem(\"DBlen\")-1);\r\n");
      out.write("						$(\"#tb_\"+cnum).remove();\r\n");
      out.write("						$(\"#save\"+cnum).remove();\r\n");
      out.write("						alert(\"삭제되었습니다.\");\r\n");
      out.write("					}\r\n");
      out.write("					\r\n");
      out.write("				}\r\n");
      out.write("			}\r\n");
      out.write("		}\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("		\r\n");
      out.write("// 		function del() {\r\n");
      out.write("// 			var element = document.getElementById(classes[0]);\r\n");
      out.write("// 		    element.parentNode.removeChild(element);\r\n");
      out.write("// // 			alert(\"어거지로 구현함..\");\r\n");
      out.write("// 		}\r\n");
      out.write("		\r\n");
      out.write("	</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
